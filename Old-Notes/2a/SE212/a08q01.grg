#u lajaneck kcarruth
#a 08
#q 01
#check PC
proc main() {
@ x == x0 & x >= y @
	if (y â‰¤ 2) then {
		@ x == x0 & x >= y & y <= 2 @  						% If-Then-Else
		@ x + 2 >= x0 + y 									% Implied(VC1)
		x := x + 2;
		@ x >= x0 + y @ 									% Asn

	} else {
		@ x == x0 & x >= y & !(y <= 2) @ 					% If-Then-Else
		if !(x == 0) then {
			@ x == x0 & x >= y & !(y <= 2) & !(x == 0) @ 	% If-Then
			@2 * x >= x0 + y @ 								% Implied(VC2)
			x := 2 * x;
			@ x >= x0 + y @ 								 % Asn
		};
		@ x >= x0 + y @ 									% Implied(VC3)
	};
@ x >= x0 + y @ 											% If-Then-Else
}
#check ND
%VC1
x == x0 & x >= y & y <= 2 |= x + 2 >= x0 + y
1) x == x0 & x >= y & y <= 2 								premise
2) x == x0 													by and_e on 1
3) y <= 2 													by and_e on 1
4) x + 2 == x0 + 2 											by arith(common) on 2
5) x + 2 >= x0 + y 											by arith(common) on 3, 4

%VC2
x == x0 & x >= y & !(y <= 2) & !(x == 0) |= 2 * x >= x0 + y
1) x == x0 & x >= y & !(y <= 2) & !(x == 0) 				premise
2) x == x0 													by and_e on 1
3) x >= y 													by and_e on 1
4) x0 + x >= x0 + y 										by arith(common) on 3
5) x + x >= x0 + y 											by eq_e on 2, 4
6) 2 * x >= x0 + y 											by arith(common) on 5

%VC3 
x == x0 & x >= y & !(y <= 2) & x == 0 |= x >= x0 + y
1) x == x0 & x >= y & !(y <= 2) & x == 0 					premise
2) x == x0 													by and_e on 1
3) x >= y 													by and_e on 1
4) !(y <= 2) 												by and_e on 1
5) x == 0 													by and_e on 1
6) disprove !(x >= x0 + y) {
	7) 0 >= y 												by eq_e on 3, 5
	8) y > 2 												by arith(common) on 4
	9) 0 >= 2 												by arith(comparisons) on 7,8
	10) false 												by arith(common) on 9
}
11) x >= x0 + y by raa on 6-10